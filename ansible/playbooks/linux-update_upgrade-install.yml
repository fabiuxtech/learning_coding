---
- name: "Upgrading distribution packages to latest version and installing or removing specific package"
  hosts: rpi
  gather_facts: true
  vars:
    pkg_status: "absent" # absent to remove a pkg / present to install a pkg
    pkg_name: "insert_pkg_name" # package name to install or remove
    skip_add_or_rm_pkg: true # true if you want to skip installing or removing specific package task / false to run it
    want_to_escalate: true # true if you want to run tasks escalating to root / false to run with no privileges escalation

  tasks:

    - name: "Searching and installing distribution packages upgrades"
      become: "{{ want_to_escalate }}"
      ansible.builtin.package:
        update_cache: true
        name: "*"
        state: latest
      register: upgrade_result

    - name: "Auto-remove unused packages "
      become: "{{ want_to_escalate }}"
      ansible.builtin.package:
        update_cache: true
        autoremove: true
      register: autoremove_result
      when: ansible_pkg_mgr == "apt" or ansible_pkg_mgr == "dnf"

    - name: "{{ 'Installing ' if pkg_status == 'present' else ('Removing ' if pkg_status == 'absent' else 'pkg_status wrong status for ') }}{{ pkg_name }} package"
      become: "{{ want_to_escalate }}"
      ansible.builtin.package:
        name: "{{ pkg_name }}"
        state: "{{ pkg_status }}"
      register: inst_rem_result
      when: not skip_add_or_rm_pkg

    - name: "Debug Upgrade Task"
      ansible.builtin.debug:
        var: upgrade_result
      when: upgrade_result.changed is true or upgrade_result.failed is true

    - name: "Debug Auto-remove Task"
      ansible.builtin.debug:
        var: autoremove_result
      when: autoremove_result.changed is true or autoremove_result.failed is true

    - name: "Debug Install/Remove Task"
      ansible.builtin.debug:
        var: inst_rem_result
      when: >
        inst_rem_result.changed is true or
        inst_rem_result.failed is true or
        (inst_rem_result.results is defined and
        'No match' in inst_rem_result.results[0])
