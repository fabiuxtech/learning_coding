---
- name: "Upgrading distribution packages to latest version and installing or removing specific package"
  hosts: myself
  gather_facts: true
  vars:
    pkg_status: "absent" # absent to remove a pkg / present to install a pkg
    pkg_name: "insert_pkg_name" # package name to install or remove
    skip_add_or_rm_pkg: true # true if you want to skip installing or removing specific package task / false to run it
    want_to_escalate: true # true if you want to run tasks escalating to root, it will ask password interactively / false to run with no privileges escalation

  tasks:

  - name: "Searching and installing distribution packages upgrades"
    become: "{{ want_to_escalate }}"
    ansible.builtin.package:
      update_cache: true
      name: "*"
      state: latest
      #autoremove: true
  
    register: result

  - name: "{{ 'Installing ' if pkg_status == 'present' else ( 'Removing ' if pkg_status == 'absent' else 'pkg_status wrong status for ' )}}{{ pkg_name }} package"
    become: "{{ want_to_escalate }}"
    ansible.builtin.package:
      name: "{{ pkg_name }}"
      state: "{{ pkg_status }}" 
    register: result
    when: not skip_add_or_rm_pkg

  - debug:
      var: result.stdout